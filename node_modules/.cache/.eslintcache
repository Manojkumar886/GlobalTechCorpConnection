[{"E:\\Reactjs-Practice\\connection\\src\\index.js":"1","E:\\Reactjs-Practice\\connection\\src\\App.js":"2","E:\\Reactjs-Practice\\connection\\src\\Loginpage.js":"3","E:\\Reactjs-Practice\\connection\\src\\Homepage.js":"4","E:\\Reactjs-Practice\\connection\\src\\NewEmployeeForm.js":"5","E:\\Reactjs-Practice\\connection\\src\\Connect.js":"6"},{"size":203,"mtime":1697447254627,"results":"7","hashOfConfig":"8"},{"size":422,"mtime":1697519629582,"results":"9","hashOfConfig":"8"},{"size":3456,"mtime":1697533923592,"results":"10","hashOfConfig":"8"},{"size":1152,"mtime":1697448388945,"results":"11","hashOfConfig":"8"},{"size":5317,"mtime":1697534246586,"results":"12","hashOfConfig":"8"},{"size":831,"mtime":1697534185426,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pvwt9v",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Reactjs-Practice\\connection\\src\\index.js",[],[],"E:\\Reactjs-Practice\\connection\\src\\App.js",[],[],"E:\\Reactjs-Practice\\connection\\src\\Loginpage.js",["34","35"],[],"import { useState } from \"react\"\r\nimport { Register } from \"./NewEmployeeForm\"\r\nimport Person4SharpIcon from '@mui/icons-material/Person4Sharp';\r\nimport KeySharpIcon from '@mui/icons-material/KeySharp';\r\nimport { Loadempdetails } from \"./Connect\";\r\n\r\nexport const Login=()=>{\r\n\r\n    const[cview,setCview]=useState(false)\r\n\r\n    const[user,setUser]=useState({\r\n        \"username\":\"\",\r\n        \"password\":\"\"\r\n    })\r\n\r\n    const onPerform=(eve)=>{\r\n        const{name,value}=eve.target\r\n        setUser((old)=>{\r\n            return{\r\n                ...old,\r\n                [name]:value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            {(cview)?\r\n            <>\r\n                {alert(\"new will call\")}\r\n                <Register/>\r\n            </>\r\n            :\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center mt-5\">\r\n                        <div className=\"col-lg-6 col-md-8 col-sm-12 p-5 shadow-lg\">\r\n                            <div className=\"form group\">\r\n                                <label>Username <Person4SharpIcon></Person4SharpIcon></label>\r\n                                <input \r\n                                type=\"text\" \r\n                                onChange={onPerform} \r\n                                value={user.username} name=\"username\" \r\n                                placeholder=\"Username please\"\r\n                                className=\"form-control\" />\r\n                            </div>\r\n                            <div className=\"form group\">\r\n                                <label>Password <KeySharpIcon></KeySharpIcon></label>\r\n                                <input \r\n                                type=\"password\" \r\n                                onChange={onPerform} \r\n                                value={user.password} name=\"password\" \r\n                                placeholder=\"Password please\" \r\n                                className=\"form-control\" />\r\n                            </div>\r\n                            <div className=\"row justify-content-around mt-3\">\r\n                                <button className=\"col-3 btn btn-outline-primary\"\r\n                                onClick={async()=>\r\n                                {\r\n                                     // alert(user.username+\":\"+user.password);\r\n                                    // const temp=btoa(user);\r\n                                    // alert(temp) \r\n                                    const t=await Loadempdetails(user);\r\n                                    // alert(t.);\r\n                                    window.location.assign(\"/\");\r\n                                }}>\r\n                                    <i class=\"bi bi-box-arrow-in-right\"></i>Plugin\r\n                                </button>\r\n                                <button className=\"col-3 btn btn-outline-dark\" type=\"reset\">\r\n                                    <i class=\"bi bi-x-circle-fill\"></i>Cancel\r\n                                </button>\r\n                            </div>\r\n                            <a \r\n                            onClick={()=>\r\n                            {\r\n                                setCview(true);\r\n                            }}>New Employee</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            }\r\n        </>\r\n    )\r\n}",["36"],"E:\\Reactjs-Practice\\connection\\src\\Homepage.js",["37"],[],"E:\\Reactjs-Practice\\connection\\src\\NewEmployeeForm.js",[],[],"E:\\Reactjs-Practice\\connection\\src\\Connect.js",[],[],{"ruleId":"38","severity":1,"message":"39","line":65,"column":43,"nodeType":"40","messageId":"41","endLine":65,"endColumn":44},{"ruleId":"42","severity":1,"message":"43","line":75,"column":29,"nodeType":"44","endLine":79,"endColumn":32},{"ruleId":"45","replacedBy":"46"},{"ruleId":"38","severity":1,"message":"47","line":1,"column":9,"nodeType":"40","messageId":"41","endLine":1,"endColumn":15},"no-unused-vars","'t' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-new-object",["48"],"'Button' is defined but never used.","no-object-constructor"]